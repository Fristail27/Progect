{"version":3,"sources":["pages/registration/Registration.module.css","common/Input.module.css","pages/common/c1-SuperInputText/SuperInputText.module.css","pages/common/c2-SuperButton/SuperButton.module.css","pages/common/c3-SuperCheckbox/SuperCheckbox.module.css","common/Navigation/Navigation.module.css","pages/login/Login/Login.module.css","pages/common/preloader/Preloader.module.css","api/registration-api.ts","store/app-Reducer.ts","store/reg-Reducer.ts","pages/common/preloader/Preloader.tsx","common/EmailInput.tsx","common/PassInput.tsx","common/Button.tsx","pages/registration/Registration.tsx","pages/profile/Profile.tsx","api/PasswordRecoveryAPI.ts","store/passwordRecovery-Reducer.ts","utils/validations/validations.ts","pages/newPasswordPage/NewPasswordPage.tsx","pages/passwordRecoveryPage/PasswordRecoveryPage.tsx","pages/common/c1-SuperInputText/SuperInputText.tsx","pages/common/c2-SuperButton/SuperButton.tsx","pages/common/c3-SuperCheckbox/SuperCheckbox.tsx","pages/testPage/TestPage.tsx","pages/error404/Error404.tsx","pages/main/Main.tsx","pages/login/Login/Login.tsx","api/authApi.ts","store/auth-Reducer.ts","pages/login/LoginContainer.tsx","common/Navigation/Navigation.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","regAPI","data","post","ON_CHANGE_APP_STATUS","initialState","appStatus","onChangeAppStatusAC","status","type","succeedRegister","error","undefined","setErrorAC","Preloader","id","s","fountainG","fountainG_1","className","fountainG_2","fountainG_3","fountainG_4","fountainG_5","fountainG_6","fountainG_7","fountainG_8","EmailInput","email","onChange","useState","emailErr","setEmailErr","onFocus","value","onBlur","trim","test","e","currentTarget","placeholder","inputErr","style","marginTop","PassInput","password","passwordErr","setPasswordErr","console","log","length","Button","name","onClick","disabled","cursor","Registration","dispatch","useDispatch","useSelector","state","reg","statusApp","app","setEmail","setPassword","repeatPassword","setRepeatPassword","sendError","setSendError","to","registrationModule","registrationForm","onSubmit","preventDefault","color","then","res","catch","err","response","message","Profile","profName","auth","userData","isAuth","withCredentials","passwordRecoveryAPI","mail","from","pass","token","resetPasswordToken","valueOfInputEmail","errorStatusForPassRec","errorStatusForNewPass","valueInputPass","valueInputPassRec","ON_CHANGE_INPUT_EMAIL","SET_ERROR_STATUS_FOR_PASS_REC","SET_ERROR_STATUS_FOR_NEW_PASS","ON_CHANGE_INPUT_PASS","ON_CHANGE_INPUT_PASS_REC","onChangeInputAC","setErrorStatusForPassRecAC","setErrorStatusForNewPassAC","onChangeInputPassAC","onChangeInputPassRecAC","validations","NewPasswordPage","React","redirect","setRedirect","touchedPass","setTouchedPass","touchedPassRepeat","setTouchedPassRepeat","errorStatus","valuePass","passValid","valuePassRepeat","passRepeatValid","useParams","errorStylePass","border","errorStylePassRepeat","display","a","sendPassForNewPassTC","PasswordRecoveryPage","emailValid","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","superInput","errorInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","lab","checked","TestPage","Error404","Main","flexDirection","Login","props","emailHandler","passwordHandler","elementInput","checkHandler","check","onSubm","authAPI","_id","avatar","publicCardPacksCount","created","updated","isAdmin","verified","rememberMe","loginSuccess","AUTH_TRY","authTryAC","connect","user","setEmailText","setPasswordText","setRememberMe","Navigations","authorized","text","styles","wrapper","navigation","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7cdc918.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationModule\":\"Registration_registrationModule__1fKXs\",\"registrationForm\":\"Registration_registrationForm__22e4F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputErr\":\"Input_inputErr__20OOU\",\"error\":\"Input_error__SMEdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2rqjE\",\"errorInput\":\"SuperInputText_errorInput__M4JuS\",\"error\":\"SuperInputText_error__3wWI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1nLOf\",\"red\":\"SuperButton_red__2HGG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lab\":\"SuperCheckbox_lab__3o2fV\",\"checkbox\":\"SuperCheckbox_checkbox__STjVD\",\"spanClassName\":\"SuperCheckbox_spanClassName__CL-eB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Navigation_wrapper__2FRyW\",\"navigation\":\"Navigation_navigation__3CdAO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLogin\":\"Login_formLogin__1LCmO\",\"elementInput\":\"Login_elementInput__3lPY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fountainG\":\"Preloader_fountainG__2UlqG\",\"bounce_fountainG\":\"Preloader_bounce_fountainG__3UKYB\",\"fountainG_1\":\"Preloader_fountainG_1__1JtFM\",\"fountainG_2\":\"Preloader_fountainG_2__24vwM\",\"fountainG_3\":\"Preloader_fountainG_3__12Cna\",\"fountainG_4\":\"Preloader_fountainG_4__2byAC\",\"fountainG_5\":\"Preloader_fountainG_5__3z7n0\",\"fountainG_6\":\"Preloader_fountainG_6__Ir0vE\",\"fountainG_7\":\"Preloader_fountainG_7__1IkHF\",\"fountainG_8\":\"Preloader_fountainG_8__1bICb\"};","import axios from \"axios\"\r\n\r\nexport type DataType = {\r\n    email: string\r\n    password: string\r\n}\r\ntype RegisterResponseType = {\r\n    addedUser: {}\r\n    error?: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\"\r\n})\r\n\r\nexport const regAPI = {\r\n    register(data: DataType) {\r\n        return instance.post<RegisterResponseType>(\"auth/register\", data)\r\n    }\r\n}","import { RequestStatusType } from \"./auth-Reducer\"\r\n\r\nconst ON_CHANGE_APP_STATUS = \"App/ON_CHANGE_APP_STATUS\"\r\n\r\nconst initialState = {\r\n    appStatus: 'idle' as RequestStatusType\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\nexport type OnChangeAppStatusActionType = {\r\n    type: typeof ON_CHANGE_APP_STATUS\r\n    status: RequestStatusType\r\n}\r\ntype ActionsType = OnChangeAppStatusActionType\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ON_CHANGE_APP_STATUS:\r\n            return {\r\n                ...state,\r\n                appStatus: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const onChangeAppStatusAC = (status:RequestStatusType):OnChangeAppStatusActionType => ({type: ON_CHANGE_APP_STATUS, status})\r\n\r\n\r\n","import {DataType, regAPI} from \"../api/registration-api\";\r\nimport {Dispatch} from \"react\";\r\nimport {onChangeAppStatusAC, OnChangeAppStatusActionType} from \"./app-Reducer\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState = {\r\n    succeedRegister: false,\r\n    error: undefined as string|undefined\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = RegisterActionType|SetErrorActionType\r\n\r\nexport const regReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"reg/SET-REGISTER\":\r\n            return {...state, succeedRegister: action.succeedRegister}\r\n        case \"reg/SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst registerAC = (succeedRegister: boolean) => {\r\n    return {\r\n        type: \"reg/SET-REGISTER\",\r\n        succeedRegister\r\n    } as const\r\n}\r\nconst setErrorAC = (error: string) => {\r\n    return {\r\n        type: \"reg/SET-ERROR\",\r\n        error\r\n    } as const\r\n}\r\n\r\ntype RegisterActionType = ReturnType<typeof registerAC>\r\ntype SetErrorActionType = ReturnType<typeof setErrorAC>\r\n\r\nexport const registerTC = (data: DataType) => (dispatch: Dispatch<ActionsType|OnChangeAppStatusActionType>) => {\r\n    dispatch(onChangeAppStatusAC(\"loading\"))\r\n    regAPI.register(data)\r\n        .then((res) => {\r\n            if (!res.data.error) {\r\n                dispatch(registerAC(true))\r\n                dispatch(onChangeAppStatusAC(\"succeeded\"))\r\n            } else {\r\n                dispatch(setErrorAC(res.data.error))\r\n                dispatch(onChangeAppStatusAC(\"failed\"))\r\n            }\r\n        })\r\n        .catch((err) => {\r\n            dispatch(onChangeAppStatusAC(\"failed\"))\r\n            if (err.response) {\r\n                dispatch(setErrorAC(err.response.data.error))\r\n            } else {\r\n                dispatch(setErrorAC(err.message))\r\n            }\r\n        })\r\n}","import React from \"react\";\r\nimport s from \"./Preloader.module.css\"\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div id={s.fountainG}>\r\n            <div id={s.fountainG_1} className={s.fountainG}/>\r\n            <div id={s.fountainG_2} className={s.fountainG}/>\r\n            <div id={s.fountainG_3} className={s.fountainG}/>\r\n            <div id={s.fountainG_4} className={s.fountainG}/>\r\n            <div id={s.fountainG_5} className={s.fountainG}/>\r\n            <div id={s.fountainG_6} className={s.fountainG}/>\r\n            <div id={s.fountainG_7} className={s.fountainG}/>\r\n            <div id={s.fountainG_8} className={s.fountainG}/>\r\n        </div>\r\n    )\r\n}","import s from \"./Input.module.css\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\n\r\ntype EmailInputPropsType = {\r\n    email: string\r\n    onChange: (email: string) => void\r\n}\r\n\r\nexport const EmailInput: React.FC<EmailInputPropsType> = ({email, onChange}) => {\r\n\r\n    const [emailErr, setEmailErr] = useState<string>(\"\")\r\n\r\n    const onBlurEmail = () => {\r\n        if (email.trim() === \"\") {\r\n            setEmailErr('Email Required')\r\n        }\r\n        if(email) {\r\n            if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n                setEmailErr('Invalid email address')\r\n            } else {\r\n                setEmailErr('')\r\n            }}\r\n    }\r\n    const onMailChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input className={emailErr && s.error} onFocus={() => setEmailErr('')} value={email}\r\n                   onBlur={onBlurEmail} onChange={onMailChangeHandler} placeholder=\"Email\" type={\"email\"}/>\r\n            {emailErr && <div className={s.inputErr} style={{marginTop: \"-3px\"}}>{emailErr}</div>}\r\n        </div>\r\n    )\r\n}","import s from \"./Input.module.css\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\n\r\ntype PassInputPropsType = {\r\n    password: string\r\n    onChange: (pass: string) => void\r\n}\r\n\r\nexport const PassInput: React.FC<PassInputPropsType> = ({password, onChange}) => {\r\n\r\n    const [passwordErr, setPasswordErr] = useState<string>(\"\")\r\n\r\n    const onBlurPass = () => {\r\n        if (password.trim() === \"\") {\r\n            setPasswordErr('Password Required')\r\n        }\r\n    }\r\n    const onPassChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (password.length < 7) {\r\n            setPasswordErr('Password must be more than 7 characters')\r\n        } else {\r\n            setPasswordErr('')\r\n        }\r\n        onChange(e.currentTarget.value.trim())\r\n    }\r\n    console.log(password)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input className={passwordErr && s.error} onFocus={() => setPasswordErr('')} value={password}\r\n                   onBlur={onBlurPass} onChange={onPassChangeHandler} placeholder=\"Password\" type={\"password\"}/>\r\n            {passwordErr && <div className={s.inputErr} style={{marginTop: \"-3px\"}}>{passwordErr}</div>}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {RequestStatusType} from \"../store/reg-Reducer\";\r\n\r\ntype ButtonPropsType = {\r\n    name: string\r\n    onClick: () => void\r\n    status: RequestStatusType\r\n}\r\n\r\nexport const Button: React.FC<ButtonPropsType> = ({name, onClick, status}) => {\r\n    return (\r\n        <div>\r\n            <button disabled={status === \"loading\"} style={{cursor:\"pointer\"}} onClick={onClick}>{name}</button>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport s from \"./Registration.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {registerTC, RequestStatusType} from \"../../store/reg-Reducer\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\nimport {onChangeAppStatusAC} from \"../../store/app-Reducer\";\r\nimport {EmailInput} from \"../../common/EmailInput\";\r\nimport {PassInput} from \"../../common/PassInput\";\r\nimport {Button} from \"../../common/Button\";\r\n\r\nconst Registration = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const succeedRegister = useSelector<AppRootStateType, boolean>(state => state.reg.succeedRegister)\r\n    const statusApp = useSelector<AppRootStateType, RequestStatusType>(state => state.app.appStatus)\r\n    const error = useSelector<AppRootStateType, string | undefined>(state => state.reg.error)\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [repeatPassword, setRepeatPassword] = useState<string>(\"\")\r\n    const [sendError, setSendError] = useState<string>(\"\")\r\n\r\n    const onRepeatPassChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRepeatPassword(e.currentTarget.value)\r\n        if (statusApp !== \"idle\") dispatch(onChangeAppStatusAC(\"idle\"))\r\n    }\r\n    const onButtonClick = () => {\r\n        if (email && password) {\r\n            if (password === repeatPassword) {\r\n                dispatch(registerTC({email, password}))\r\n            } else {\r\n                setSendError(\"incorrect email or password\")\r\n            }\r\n        } else {\r\n            setSendError(\"required email and password\")\r\n        }\r\n    }\r\n\r\n    if (succeedRegister) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.registrationModule}>\r\n            <h1>Registration</h1>\r\n            <form className={s.registrationForm} onSubmit={(e) => e.preventDefault()}>\r\n                <EmailInput email={email} onChange={setEmail}/>\r\n                <PassInput password={password} onChange={setPassword}/>\r\n                <input value={repeatPassword} onChange={onRepeatPassChangeHandler}\r\n                       placeholder=\"Repeat password\" type={\"password\"}/>\r\n                {password !== repeatPassword ? <div style={{color:\"red\"}}>Different Password</div> : \"\"}\r\n                <Button name={\"Register\"} onClick={onButtonClick} status={statusApp}/>\r\n                {sendError && <div style={{color:\"red\"}} >{sendError}</div>}\r\n                {error && <div style={{color:\"red\"}}>{error}</div>}\r\n                {statusApp ===\"loading\" && <Preloader/>}\r\n                <NavLink to={\"/login\"}>Sign in</NavLink>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registration","import React from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\n\r\n\r\nconst Profile = () => {\r\n    const profName = useSelector<AppRootStateType, string | null>(state => state.auth.userData.name)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.auth.isAuth)\r\n    if(!isAuth) {\r\n        return <Redirect to={'/'}/>\r\n    }\r\n\r\n    return (\r\n\r\n        <h1>profile {profName}</h1>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile","import axios from \"axios\";\r\n\r\nconst baseURL = \"https://neko-back.herokuapp.com/2.0/\"\r\nconst baseURLForLocal = \"http://localhost:7542/2.0/\"\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: baseURL,\r\n})\r\nconst instanceLoc = axios.create({\r\n    withCredentials: true,\r\n    baseURL: baseURLForLocal,\r\n})\r\nexport const passwordRecoveryAPI = {\r\n    sendEmailForChangePassword(mail: string) {\r\n        return instance.post('auth/forgot', {\r\n            email: mail,\r\n            from: \"Fristail27  <Fristail27@gmail.com>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">\r\n                            password recovery link: <a href='http://localhost:3000/Progect#/new-password-page/$token$'>link</a>\r\n                      </div>`\r\n        })\r\n    },\r\n    sendNewPassword (pass:string, token:string) {\r\n        return instance.post('auth/set-new-password', {\r\n            password: pass,\r\n            resetPasswordToken: token\r\n        })\r\n    }\r\n\r\n}","import {passwordRecoveryAPI} from \"../api/PasswordRecoveryAPI\";\r\nimport {Dispatch} from \"react\";\r\nimport {onChangeAppStatusAC, OnChangeAppStatusActionType} from \"./app-Reducer\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    valueOfInputEmail: \"\" as string,\r\n    errorStatusForPassRec: null as string | null,\r\n    errorStatusForNewPass: null as string | null,\r\n    valueInputPass: \"\" as string,\r\n    valueInputPassRec: \"\" as string,\r\n}\r\n\r\nconst ON_CHANGE_INPUT_EMAIL = \"passwordRecovery/ON_CHANGE_INPUT_EMAIL\"\r\nconst SET_ERROR_STATUS_FOR_PASS_REC = \"passwordRecovery/SET_ERROR_STATUS_FOR_PASS_REC\"\r\nconst SET_ERROR_STATUS_FOR_NEW_PASS = \"passwordRecovery/SET_ERROR_STATUS_FOR_NEW_PASS\"\r\nconst ON_CHANGE_INPUT_PASS = \"passwordRecovery/ON_CHANGE_INPUT_PASS\"\r\nconst ON_CHANGE_INPUT_PASS_REC = \"passwordRecovery/ON_CHANGE_INPUT_PASS_REC\"\r\n\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype OnChangeInputActionType = {\r\n    type: typeof ON_CHANGE_INPUT_EMAIL\r\n    value: string\r\n}\r\ntype SetErrorStatusForPassRecActionType = {\r\n    type: typeof SET_ERROR_STATUS_FOR_PASS_REC\r\n    error: string | null\r\n}\r\ntype SetErrorStatusForNewPassActionType = {\r\n    type: typeof SET_ERROR_STATUS_FOR_NEW_PASS\r\n    error: string | null\r\n}\r\ntype OnChangeInputPassActionType = {\r\n    type: typeof ON_CHANGE_INPUT_PASS\r\n    value: string\r\n}\r\ntype onChangeInputPassRecActionType = {\r\n    type: typeof ON_CHANGE_INPUT_PASS_REC\r\n    value: string\r\n}\r\ntype ActionsType =\r\n    OnChangeInputActionType\r\n    | SetErrorStatusForPassRecActionType\r\n    | SetErrorStatusForNewPassActionType\r\n    | OnChangeInputPassActionType\r\n    | onChangeInputPassRecActionType\r\n\r\nexport const passwordRecoveryReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ON_CHANGE_INPUT_EMAIL:\r\n            return {\r\n                ...state,\r\n                valueOfInputEmail: action.value\r\n            }\r\n        case SET_ERROR_STATUS_FOR_PASS_REC:\r\n            return {\r\n                ...state,\r\n                errorStatusForPassRec: action.error\r\n            }\r\n        case SET_ERROR_STATUS_FOR_NEW_PASS:\r\n            return {\r\n                ...state,\r\n                errorStatusForNewPass: action.error\r\n            }\r\n        case ON_CHANGE_INPUT_PASS:\r\n            return {\r\n                ...state,\r\n                valueInputPass: action.value\r\n            }\r\n        case ON_CHANGE_INPUT_PASS_REC:\r\n            return {\r\n                ...state,\r\n                valueInputPassRec: action.value\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const onChangeInputAC = (value: string): OnChangeInputActionType => ({type: ON_CHANGE_INPUT_EMAIL, value})\r\nexport const setErrorStatusForPassRecAC = (error: string | null): SetErrorStatusForPassRecActionType => ({\r\n    type: SET_ERROR_STATUS_FOR_PASS_REC,\r\n    error\r\n})\r\nexport const setErrorStatusForNewPassAC = (error: string | null): SetErrorStatusForNewPassActionType => ({\r\n    type: SET_ERROR_STATUS_FOR_NEW_PASS,\r\n    error\r\n})\r\nexport const onChangeInputPassAC = (value: string): OnChangeInputPassActionType => ({type: ON_CHANGE_INPUT_PASS, value})\r\nexport const onChangeInputPassRecAC = (value: string): onChangeInputPassRecActionType => ({\r\n    type: ON_CHANGE_INPUT_PASS_REC,\r\n    value\r\n})\r\n\r\n//thunks\r\nexport const sendEmailForRecoveryPassTC = (mail: string) => async (dispatch: Dispatch<OnChangeInputActionType | SetErrorStatusForPassRecActionType | OnChangeAppStatusActionType>) => {\r\n    try {\r\n        dispatch(onChangeAppStatusAC(\"loading\"))\r\n        await passwordRecoveryAPI.sendEmailForChangePassword(mail)\r\n        dispatch(onChangeInputAC(\"\"))\r\n        dispatch(onChangeAppStatusAC(\"succeeded\"))\r\n    } catch (err) {\r\n        if (err.response) {\r\n            dispatch(setErrorStatusForPassRecAC(err.response.data.error))\r\n            dispatch(onChangeAppStatusAC(\"failed\"))\r\n        } else {\r\n            dispatch(setErrorStatusForPassRecAC(err.message))\r\n            dispatch(onChangeAppStatusAC(\"failed\"))\r\n        }\r\n    }\r\n}\r\nexport const sendPassForNewPassTC = (pass: string, token: string) => async (dispatch: Dispatch<\r\n    OnChangeInputPassActionType |\r\n    onChangeInputPassRecActionType |\r\n    SetErrorStatusForNewPassActionType |\r\n    OnChangeAppStatusActionType>\r\n) => {\r\n    try {\r\n        dispatch(onChangeAppStatusAC(\"loading\"))\r\n        await passwordRecoveryAPI.sendNewPassword(pass, token)\r\n        dispatch(onChangeInputPassAC(\"\"))\r\n        dispatch(onChangeInputPassRecAC(\"\"))\r\n        dispatch(onChangeAppStatusAC(\"succeeded\"))\r\n\r\n    } catch (err) {\r\n        if (err.response) {\r\n            dispatch(setErrorStatusForNewPassAC(err.response.data.error))\r\n            dispatch(onChangeAppStatusAC(\"failed\"))\r\n        } else {\r\n            dispatch(setErrorStatusForNewPassAC(err.message))\r\n            dispatch(onChangeAppStatusAC(\"failed\"))\r\n        }\r\n    }\r\n}\r\n\r\n","export const validations = {\r\n    emailValid(mail: string) {\r\n        return (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(mail))\r\n    },\r\n    passValid(pass: string) {\r\n        return (pass.length < 7)\r\n    }\r\n}\r\n","import React, {ChangeEvent} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {\r\n    onChangeInputPassAC,\r\n    onChangeInputPassRecAC,\r\n    sendPassForNewPassTC,\r\n    setErrorStatusForNewPassAC\r\n} from \"../../store/passwordRecovery-Reducer\";\r\nimport {validations} from \"../../utils/validations/validations\";\r\nimport {onChangeAppStatusAC} from \"../../store/app-Reducer\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\n\r\nconst NewPasswordPage:React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [redirect, setRedirect] = React.useState<boolean>(false)\r\n    const [touchedPass, setTouchedPass] = React.useState<boolean>(false)\r\n    const [touchedPassRepeat, setTouchedPassRepeat] = React.useState<boolean>(false)\r\n    const errorStatus = useSelector<AppRootStateType, string | null>(state => state.pass.errorStatusForNewPass)\r\n    const valuePass = useSelector<AppRootStateType, string>(state => state.pass.valueInputPass)\r\n    const passValid = validations.passValid(valuePass)\r\n    const valuePassRepeat = useSelector<AppRootStateType, string>(state => state.pass.valueInputPassRec)\r\n    const passRepeatValid = validations.passValid(valuePassRepeat)\r\n    const statusApp = useSelector<AppRootStateType, string>(state => state.app.appStatus)\r\n    const {token} = useParams<{ token?: string }>();\r\n\r\n    const onChangeHandlerPass = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (errorStatus) {\r\n            dispatch(setErrorStatusForNewPassAC(null))\r\n        }\r\n        if (touchedPass || touchedPassRepeat) {\r\n            setTouchedPass(false)\r\n            setTouchedPassRepeat(false)\r\n        }\r\n        dispatch(onChangeInputPassAC(e.currentTarget.value))\r\n    }\r\n    const onChangeHandlerPassRepeat = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (errorStatus) {\r\n            dispatch(setErrorStatusForNewPassAC(null))\r\n        }\r\n        if (statusApp !== \"idle\") {\r\n            dispatch(onChangeAppStatusAC(\"idle\"))\r\n        }\r\n        if (touchedPass || touchedPassRepeat) {\r\n            setTouchedPass(false)\r\n            setTouchedPassRepeat(false)\r\n        }\r\n        dispatch(onChangeInputPassRecAC(e.currentTarget.value))\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        if (valuePass !== valuePassRepeat) {\r\n            dispatch(setErrorStatusForNewPassAC(\"Пароли не совпадают\"))\r\n        } else if (validations.passValid(valuePass)) {\r\n            dispatch(setErrorStatusForNewPassAC(\"Длина пароля должна быть больше 7 символов\"))\r\n        } else {\r\n            if (token) {\r\n                dispatch(sendPassForNewPassTC(valuePass, token))\r\n            }\r\n            if (statusApp === \"succeeded\") {\r\n                setRedirect(true)\r\n                dispatch(onChangeAppStatusAC(\"idle\"))\r\n            }\r\n        }\r\n    }\r\n    const errorStylePass = (passValid && touchedPass) ? {border: \"2px solid red\"} : {}\r\n    const errorStylePassRepeat = (passRepeatValid && touchedPassRepeat) ? {border: \"2px solid red\"} : {}\r\n\r\n    const onBlurHandlerPass = () => {\r\n        if (passValid) {\r\n            dispatch(setErrorStatusForNewPassAC(\"Некоректный пароль\"))\r\n            setTouchedPass(true)\r\n            setTouchedPassRepeat(true)\r\n        } else {\r\n            dispatch(setErrorStatusForNewPassAC(null))\r\n        }\r\n    }\r\n    const onBlurHandlerPassRepeat = () => {\r\n        if (passRepeatValid) {\r\n            dispatch(setErrorStatusForNewPassAC(\"Некоректный пароль\"))\r\n            setTouchedPass(true)\r\n            setTouchedPassRepeat(true)\r\n        } else {\r\n            dispatch(setErrorStatusForNewPassAC(null))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {redirect && <Redirect to={\"/login\"}/>}\r\n            <h1>New Password Page</h1>\r\n            <label style={{display: \"block\"}}><input onBlur={onBlurHandlerPass} onFocus={() => setTouchedPass(true)}\r\n                                                     style={errorStylePass} value={valuePass}\r\n                                                     onChange={onChangeHandlerPass} type=\"text\"/>Password</label>\r\n            <label style={{display: \"block\"}}><input onBlur={onBlurHandlerPassRepeat}\r\n                                                     onFocus={() => setTouchedPassRepeat(true)}\r\n                                                     style={errorStylePassRepeat} value={valuePassRepeat}\r\n                                                     onChange={onChangeHandlerPassRepeat} type=\"text\"/>repeat Password</label>\r\n            {errorStatus && <span style={{color: \"red\"}}>{errorStatus}</span>}\r\n            <button disabled={statusApp === \"loading\"} onClick={clickHandler}>Change Pass</button>\r\n            {statusApp ===\"loading\" && <Preloader/>}\r\n            {statusApp === \"succeeded\" && <span style={{color:\"green\"}}>{statusApp}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPasswordPage","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {onChangeInputAC, sendEmailForRecoveryPassTC, setErrorStatusForPassRecAC} from \"../../store/passwordRecovery-Reducer\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {EmailInput} from \"../../common/EmailInput\";\r\nimport {Button} from \"../../common/Button\";\r\nimport s from \"../registration/Registration.module.css\";\r\nimport {validations} from \"../../utils/validations/validations\";\r\nimport {Preloader} from \"../common/preloader/Preloader\";\r\nimport { RequestStatusType } from \"../../store/auth-Reducer\";\r\n\r\n\r\nconst PasswordRecoveryPage = () => {\r\n    const dispatch = useDispatch()\r\n    const value = useSelector<AppRootStateType, string>(state => state.pass.valueOfInputEmail)\r\n    const emailValid =  validations.emailValid(value)\r\n    const errorStatus = useSelector<AppRootStateType, string|null>(state => state.pass.errorStatusForPassRec)\r\n    const statusApp = useSelector<AppRootStateType, RequestStatusType>(state => state.app.appStatus)\r\n\r\n    const clickHandler = ()=> {\r\n        emailValid\r\n            ? dispatch(setErrorStatusForPassRecAC(\"Некоректный Email\"))\r\n            : dispatch(sendEmailForRecoveryPassTC(value))\r\n    }\r\n    const onChangeHandler = (email: string) => {\r\n        dispatch(onChangeInputAC(email))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Password Recovery Page</h1>\r\n            <form className={s.registrationForm} onSubmit={(e) => e.preventDefault()}>\r\n                <EmailInput email={value} onChange={onChangeHandler}/>\r\n                <Button name={\"Send email\"} onClick={clickHandler} status={statusApp}/>\r\n                {errorStatus && <p style={{color:\"red\"}}>{errorStatus}</p>}\r\n            </form>\r\n            {statusApp ===\"loading\" && <Preloader/>}\r\n            {statusApp === \"succeeded\" && <span style={{color:\"green\"}}>{statusApp}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PasswordRecoveryPage\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : \"\" } `; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = ` ${s.default} ${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked :boolean) => void,\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label className={s.lab}>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <div className={s.spanClassName}>{children}</div>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React from \"react\";\r\nimport SuperInputText from \"../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport { Preloader } from \"../common/preloader/Preloader\";\r\n\r\n\r\nconst TestPage = () => {\r\n    return (\r\n        <>\r\n            <SuperInputText/>\r\n            <SuperButton children={\"TEST\"} />\r\n            <SuperCheckbox children={\"TEST\"}/>\r\n            <Preloader/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TestPage","import React from \"react\";\r\n\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <h1>Error404: Page not found</h1>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div style={{display:\"flex\", flexDirection:\"column\"}}>\r\n            <NavLink to={'/login'}>Login</NavLink>\r\n            <NavLink to={'/registration'}>registration</NavLink>\r\n            <NavLink to={'/new-password-page'}>new-password-page</NavLink>\r\n            <NavLink to={'/password-recovery-page'}>password-recovery-page</NavLink>\r\n            <NavLink to={'/test-page'}>test-page</NavLink>\r\n            <NavLink to={'/error404'}>error404</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React, {ChangeEvent} from \"react\";\r\nimport style from \"./Login.module.css\"\r\nimport s from \"../../registration/Registration.module.css\";\r\nimport {EmailInput} from \"../../../common/EmailInput\";\r\nimport {PassInput} from \"../../../common/PassInput\";\r\nimport {Button} from \"../../../common/Button\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../store/store\";\r\nimport {RequestStatusType} from \"../../../store/reg-Reducer\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\n\r\ntype LoginPropsType = {\r\n    emailHandler: (email: string) => void\r\n    passwordHandler: (pass: string) => void\r\n    checkHandler: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onSubm: () => void\r\n    email: string\r\n    password: string\r\n    check: boolean\r\n}\r\n\r\nexport const Login = (props: LoginPropsType) => {\r\n    const statusApp = useSelector<AppRootStateType, RequestStatusType>(state => state.app.appStatus)\r\n    return (\r\n        <div>\r\n            <h1>Authentication</h1>\r\n            <form className={s.registrationForm} onSubmit={(e) => e.preventDefault()}>\r\n                <EmailInput email={props.email} onChange={props.emailHandler}/>\r\n                <PassInput password={props.password} onChange={props.passwordHandler}/>\r\n                <div className={style.elementInput}>\r\n                    <span>Remember me</span>\r\n                    <input onChange={props.checkHandler} type=\"checkbox\" checked={props.check}/>\r\n                </div>\r\n                <Button name={\"Login\"} onClick={props.onSubm} status={statusApp}/>\r\n            </form>\r\n            {statusApp === \"loading\" && <Preloader/>}\r\n        </div>\r\n    )\r\n}","import axios from 'axios'\r\nimport {UserDataType} from \"../store/auth-Reducer\";\r\n\r\nconst settings = {\r\n    withCredentials: true\r\n}\r\n\r\nexport type userRequestData = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nlet instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    ...settings\r\n})\r\n\r\nexport const authAPI = {\r\n    userAuthorization(data: userRequestData) {\r\n        return instance.post<UserDataType>(\"auth/login\", data)\r\n    }\r\n}","import {Dispatch} from \"react\";\r\nimport {authAPI, userRequestData} from \"../api/authApi\";\r\nimport {onChangeAppStatusAC, OnChangeAppStatusActionType} from \"./app-Reducer\";\r\n\r\nexport const initialState = {\r\n    userData: {\r\n        _id: null,\r\n        email: null,\r\n        name: null,\r\n        avatar: null,\r\n        publicCardPacksCount: null,\r\n        created: null,\r\n        updated: null,\r\n        isAdmin: null,\r\n        verified: null,\r\n        rememberMe: null,\r\n        error: null,\r\n        isAuth: false\r\n    },\r\n    isAuth: false,\r\n    loginSuccess: false,\r\n}\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst AUTH_TRY = \"AUTH_TRY\"\r\n\r\nexport type UserDataType = {\r\n    _id: string | null\r\n    email: string | null\r\n    name: string | null\r\n    avatar?: string | null\r\n    publicCardPacksCount: number | null\r\n    created: Date | null\r\n    updated: Date | null\r\n    isAdmin: boolean | null\r\n    verified: boolean | null\r\n    rememberMe: boolean | null\r\n    error?: string | null\r\n}\r\n\r\ntype InitialStateType = {\r\n    userData: UserDataType,\r\n    isAuth: boolean\r\n    loginSuccess: boolean,\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof authTryAC>\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch(action.type) {\r\n        case AUTH_TRY:\r\n            return {\r\n                ...state,\r\n                userData: action.userData,\r\n                isAuth: action.isAuth\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype authTryACType = {\r\n    type: typeof AUTH_TRY\r\n    userData: UserDataType\r\n    isAuth: boolean\r\n}\r\nexport const authTryAC = (userData: UserDataType, isAuth: boolean): authTryACType => ({type: AUTH_TRY, userData, isAuth})\r\n\r\nexport const authenticationUserLoginTC = (data: userRequestData) =>\r\n    (dispatch: Dispatch<ActionsType | OnChangeAppStatusActionType>)=> {\r\n        dispatch(onChangeAppStatusAC(\"loading\"))\r\n        authAPI.userAuthorization(data)\r\n            .then((res) => {\r\n                if(!res.data.error) {\r\n                    dispatch(authTryAC(res.data, true))\r\n                    dispatch(onChangeAppStatusAC(\"succeeded\"))\r\n                }else {\r\n                    dispatch(authTryAC(initialState.userData, false))\r\n                    dispatch(onChangeAppStatusAC(\"failed\"))\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                const error = err.response ? err.response.data.error : (err.message + \", more details on console\")\r\n                dispatch(onChangeAppStatusAC(\"failed\"))\r\n            })\r\n    }\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Login} from \"./Login/Login\";\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {authenticationUserLoginTC} from \"../../store/auth-Reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {onChangeAppStatusAC} from \"../../store/app-Reducer\";\r\nimport {RequestStatusType} from \"../../store/reg-Reducer\";\r\n\r\nconst LoginContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const statusApp = useSelector<AppRootStateType, RequestStatusType>(state => state.app.appStatus)\r\n    let [email, setEmailText] = useState(\"\")\r\n    let [password, setPasswordText] = useState(\"\")\r\n    let [rememberMe, setRememberMe] = useState(false)\r\n\r\n    const emailHandler = (email: string) =>{\r\n        setEmailText(email)\r\n        if (statusApp !== \"idle\") {\r\n            dispatch(onChangeAppStatusAC(\"idle\"))\r\n        }\r\n    }\r\n    const passwordHandler = (pass: string) => {\r\n        setPasswordText(pass)\r\n        if (statusApp !== \"idle\") {\r\n            dispatch(onChangeAppStatusAC(\"idle\"))\r\n        }\r\n    }\r\n    const checkHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(e.currentTarget.checked)\r\n        if (statusApp !== \"idle\") {\r\n            dispatch(onChangeAppStatusAC(\"idle\"))\r\n        }\r\n    }\r\n    const onSubm = () => {\r\n        dispatch(authenticationUserLoginTC({email, password, rememberMe}))\r\n    }\r\n    if(statusApp===\"succeeded\") {\r\n        return <Redirect to={\"./profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <Login\r\n            emailHandler={emailHandler}\r\n            checkHandler={checkHandler}\r\n            passwordHandler={passwordHandler}\r\n            email={email}\r\n            password={password}\r\n            check={rememberMe}\r\n            onSubm={onSubm}\r\n        />\r\n    )\r\n}\r\n\r\nconst mstp = (state: AppRootStateType) => {\r\n    return {\r\n        user: state.auth.userData\r\n    }\r\n}\r\n\r\nexport default connect(mstp, {})(LoginContainer)","import React from \"react\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport styles from \"./Navigation.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {authTryAC, initialState} from \"../../store/auth-Reducer\";\r\nimport {onChangeAppStatusAC} from \"../../store/app-Reducer\";\r\n\r\nexport const Navigations = () => {\r\n    const dispatch = useDispatch()\r\n    const authorized = useSelector<AppRootStateType, boolean>(state => state.auth.isAuth)\r\n    const authHandler = () => {\r\n        if(authorized) {\r\n            dispatch(authTryAC(initialState.userData, false))\r\n            dispatch(onChangeAppStatusAC(\"idle\"))\r\n        }\r\n    }\r\n    const text = authorized ? \"/\" : \"/login\"\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <nav className={styles.navigation}>\r\n                <Link to={\"/\"}>Home</Link>\r\n                <Link to={\"/profile\"}>Profile</Link>\r\n            </nav>\r\n            <NavLink to={text}><button onClick={authHandler}>{authorized ? <span>Logout</span>: <span>Login</span>}</button></NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route, Switch } from 'react-router-dom';\r\nimport Registration from \"./pages/registration/Registration\";\r\nimport Profile from \"./pages/profile/Profile\";\r\nimport NewPasswordPage from './pages/newPasswordPage/NewPasswordPage';\r\nimport PasswordRecoveryPage from './pages/passwordRecoveryPage/PasswordRecoveryPage';\r\nimport TestPage from \"./pages/testPage/TestPage\";\r\nimport Error404 from \"./pages/error404/Error404\";\r\nimport Main from './pages/main/Main';\r\nimport LoginContainer from \"./pages/login/LoginContainer\";\r\nimport {Navigations} from \"./common/Navigation/Navigation\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigations/>\r\n      <Switch>\r\n        <Route exact path={\"/\"} render={()=> <Main/>}/>\r\n        <Route path={\"/login\"} render={()=><LoginContainer/>}/>\r\n        <Route path={\"/registration\"} render={()=><Registration/>}/>\r\n        <Route path={\"/profile\"} render={()=><Profile/>}/>\r\n        <Route path={\"/new-password-page/:token\"} render={()=><NewPasswordPage/>}/>\r\n        <Route path={\"/password-recovery-page\"} render={()=><PasswordRecoveryPage/>}/>\r\n        <Route path={'/test-page'} render={ () => <TestPage/> }/>\r\n        <Route path={'/error404'} render={ () => <Error404/> }/>\r\n        <Redirect from={ '*' } to={'/error404'}/>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { appReducer } from \"./app-Reducer\";\r\nimport { authReducer } from \"./auth-Reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {regReducer} from \"./reg-Reducer\";\r\nimport { passwordRecoveryReducer } from \"./passwordRecovery-Reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    pass: passwordRecoveryReducer,\r\n    reg: regReducer\r\n})\r\n\r\n// сразу добавляю middleware для использования redux-thunk\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from \"react-redux\";\nimport { store } from './store/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}