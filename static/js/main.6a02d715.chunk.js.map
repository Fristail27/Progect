{"version":3,"sources":["pages/common/c1-SuperInputText/SuperInputText.module.css","pages/common/c2-SuperButton/SuperButton.module.css","pages/common/c3-SuperCheckbox/SuperCheckbox.module.css","pages/login/Login.tsx","pages/registration/Registration.tsx","pages/profile/Profile.tsx","pages/newPasswordPage/NewPasswordPage.tsx","pages/passwordRecoveryPage/PasswordRecoveryPage.tsx","pages/common/c1-SuperInputText/SuperInputText.tsx","pages/common/c2-SuperButton/SuperButton.tsx","pages/common/c3-SuperCheckbox/SuperCheckbox.tsx","pages/testPage/TestPage.tsx","pages/error404/Error404.tsx","pages/main/Main.tsx","App.tsx","reportWebVitals.ts","store/app-Reducer.ts","store/auth-Reducer.ts","store/store.ts","index.tsx"],"names":["module","exports","Login","Registration","Profile","NewPasswordPage","PasswordRecoveryPage","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","className","restProps","finalSpanClassName","s","finalInputClassName","superInput","errorInput","e","currentTarget","value","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","lab","checked","TestPage","Error404","Main","style","display","flexDirection","to","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","app","state","action","auth","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a02d715.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__2rqjE\",\"errorInput\":\"SuperInputText_errorInput__M4JuS\",\"error\":\"SuperInputText_error__3wWI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1nLOf\",\"red\":\"SuperButton_red__2HGG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lab\":\"SuperCheckbox_lab__3o2fV\",\"checkbox\":\"SuperCheckbox_checkbox__STjVD\",\"spanClassName\":\"SuperCheckbox_spanClassName__CL-eB\"};","import React from \"react\";\r\n\r\n\r\nconst Login = () => {\r\n    return (\r\n        <h1>Login</h1>\r\n    )\r\n}\r\n\r\nexport default Login","import React from \"react\";\r\n\r\n\r\nconst Registration = () => {\r\n    return (\r\n        <h1>Registration</h1>\r\n    )\r\n}\r\n\r\nexport default Registration","import React from \"react\";\r\n\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <h1>profile</h1>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\n\r\n\r\nconst NewPasswordPage = () => {\r\n    return (\r\n        <h1>New Password Page</h1>\r\n    )\r\n}\r\n\r\nexport default NewPasswordPage","import React from \"react\";\r\n\r\n\r\nconst PasswordRecoveryPage = () => {\r\n    return (\r\n        <h1>Password Recovery Page</h1>\r\n    )\r\n}\r\n\r\nexport default PasswordRecoveryPage\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${s.superInput} ${error ? s.errorInput : \"\" } `; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = ` ${s.default} ${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked :boolean) => void,\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label className={s.lab}>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <div className={s.spanClassName}>{children}</div>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React from \"react\";\r\nimport SuperInputText from \"../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\n\r\nconst TestPage = () => {\r\n    return (\r\n        <>\r\n            <SuperInputText/>\r\n            <SuperButton children={\"TEST\"} />\r\n            <SuperCheckbox children={\"TEST\"}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TestPage","import React from \"react\";\r\n\r\n\r\nconst Error404 = () => {\r\n    return (\r\n        <h1>Error404: Page not found</h1>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div style={{display:\"flex\", flexDirection:\"column\"}}>\r\n            <NavLink to={'/login'}>Login</NavLink>\r\n            <NavLink to={'/registration'}>registration</NavLink>\r\n            <NavLink to={'/new-password-page'}>new-password-page</NavLink>\r\n            <NavLink to={'/password-recovery-page'}>password-recovery-page</NavLink>\r\n            <NavLink to={'/test-page'}>test-page</NavLink>\r\n            <NavLink to={'/error404'}>error404</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport './App.css';\nimport {Redirect, Route, Switch } from 'react-router-dom';\nimport Login from \"./pages/login/Login\";\nimport Registration from \"./pages/registration/Registration\";\nimport Profile from \"./pages/profile/Profile\";\nimport NewPasswordPage from './pages/newPasswordPage/NewPasswordPage';\nimport PasswordRecoveryPage from './pages/passwordRecoveryPage/PasswordRecoveryPage';\nimport TestPage from \"./pages/testPage/TestPage\";\nimport Error404 from \"./pages/error404/Error404\";\nimport Main from './pages/main/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path={\"/\"} render={()=> <Main/>}/>\n        <Route path={\"/login\"} render={()=><Login/>}/>\n        <Route path={\"/registration\"} render={()=><Registration/>}/>\n        <Route path={\"/profile\"} render={()=><Profile/>}/>\n        <Route path={\"/new-password-page\"} render={()=><NewPasswordPage/>}/>\n        <Route path={\"/password-recovery-page\"} render={()=><PasswordRecoveryPage/>}/>\n        <Route path={'/test-page'} render={ () => <TestPage/> }/>\n        <Route path={'/error404'} render={ () => <Error404/> }/>\n        {/*<Redirect from={ '*' } to={'/error404'}/>*/}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = any\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const initialState = {}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = any\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { appReducer } from \"./app-Reducer\";\r\nimport { authReducer } from \"./auth-Reducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n})\r\n\r\n// сразу добавляю middleware для использования redux-thunk\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from \"react-redux\";\nimport { store } from './store/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}